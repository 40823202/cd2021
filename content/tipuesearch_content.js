var tipuesearch = {"pages": [{'title': 'About', 'text': '\n \n \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W2~W4', 'text': '小組網頁: stage1-bg12 \n 小組倉儲: stage1-bg12 倉儲 \n 組員: 40823202 黃詩云、40823203 潘奕瑄 \n 我們討論的主題是:鋁罐壓扁機 \n 研發動機:減少垃圾量 \n 運用原理:運用圓盤和桿件的連接，讓圓盤做迴轉運動，桿件做直線運動，達到壓縮鐵鋁罐的目的。 \n 直線運動機構分為精確直線運動機構和近似直線運動機構兩類。其中精確直線運動機構的設計思想主要有兩種：一種是利用幾何中的反演變換，把連杆末端的圓弧路徑反演為直線，用機械反演器可以完成這一功能；另一種則是通過兩個不平行的連杆結構，把路徑限制在兩個平面的交線。近似直線運動機構則是通過多個杆件實現自由度為1的連接，調整杆件的長度使得一點的運動軌跡中包含一段近似直的線段。 (原文網址：https://kknews.cc/health/mq6yn22.html) \n 參考資料: \n \n', 'tags': '', 'url': 'W2~W4.html'}, {'title': '第一版', 'text': '設計機構: \n 零件檔 \n 1.固定器 \n \n 2.銷 \n \n 3.座動器 \n \n 4.桿件 \n \n 5.圓盤 \n \n 6.底座 \n \n 7.組合圖 \n \n \n \n', 'tags': '', 'url': '第一版.html'}, {'title': '第二版', 'text': '零件檔和組合檔 \n 模擬.ttt \n \n \n \n', 'tags': '', 'url': '第二版.html'}, {'title': 'ppt和影片', 'text': 'w1~w4的PPT \n \n', 'tags': '', 'url': 'ppt和影片.html'}, {'title': 'w6~w8', 'text': '小組網頁: https://github.com/40823202/stage2-bg10 \n 小組倉儲: https://40823202.github.io/stage2-bg10/content/index.html \n 組員: 40823202 黃詩云、40823203 潘奕瑄、40823222 曾喜賢、40823244 吳承翰 \n 我們討論的主題是:彈珠軌道 \n 研發動機:利用我們學過的原理製造出一台可以自行運作的機台出來玩。 \n 運用原理:1.運用阿基米得原理，讓彈珠可以沿著一個平面向上移動 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa02.運用凸輪原理，使其做一個上下的使其做一個上下的反覆運動，讓彈珠可以像爬階梯一樣。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa03.用圓盤的轉動，將球運送至彈珠台(控制圓盤的轉數去查看彈珠的運動軌跡) \n', 'tags': '', 'url': 'w6~w8.html'}, {'title': '模擬', 'text': '第一版 \n 問題:他跑出兩個東西，後來發現多匯入了一個組合圖。 \n 解決:將組合體的零件刪除。 \n \n 第二版 \n 問題:方塊好像沒有受到旁邊的約束，導致方塊會亂跳。 \n \xa0 \xa0 \xa0 \xa0圓盤的方向做錯。 \n 解決:在方塊旁加板子。 \n \xa0 \xa0 \xa0 \xa0改圓盤方向。 \n \n 第三版 \n 問題:從凸輪到圓盤之間的軌道做得太中間使求無法順利通過。 \n 解決:將軌道向左偏移。 \n \n 第四版 \n 問題:圓盤的縫隙問題導致求無法順利從圓盤上掉落。 \n 解決:改善圓盤的縫隙。 \n \n 第五次 \n 問題:阿基米得螺旋桿的斜度太斜導致無法讓球上升 \n 解決:改斜度(我們10度改到17度)但還是無法上去，所以我們決定繼續利用這些裝置原理，但把圖改成另一種模式。 \n \n 最後圖改成: \n \n', 'tags': '', 'url': '模擬.html'}, {'title': '檔案下載', 'text': '點我!點我! \n', 'tags': '', 'url': '檔案下載.html'}, {'title': 'w9~w18', 'text': '構想: 利用stage2-bg10(彈珠檯)以及stage2-bg9(火車)結合，並新增兩台機器， \n 使用火車搭配鐵軌進行運送，將球運送至每台機器上。 \n 功能說明: \n 第一台為stage2-bg10的彈珠台，球體運送完後會自行進行模擬 \n 第二台為新版彈珠台，主要控制為拉桿，透過拉桿將球體彈出，所觸碰到的機關會計算分數 \n 第三台為迷宮，透過控制迷宮板使球體移動來通關迷宮 \n 構想圖: \n W11 <<  Previous   Next  >> 零件圖 \n', 'tags': '', 'url': 'w9~w18.html'}, {'title': 'w10', 'text': 'task1 \n stage3-bg1 repo  |  stage3-bg1 site  |  40823245 repo  |  40823245 site  |  40823251 repo  |  40823251 site  |  40823208 repo  |  40823208 site  |  40823213 repo  |  40823213 site  |  40823232 repo  |  40823232 site  |  40823234 repo  |  40823234 site  |  40823235 repo  |  40823235 site  |  40823246 repo |  40823246 site ---------- stage3-bg2 repo  |  stage3-bg2 site  |  40823217 repo  |  40823217 site  |  40823201 repo  |  40823201 site  |  40823209 repo  |  40823209 site  |  40823210 repo  |  40823210 site  |  40823206 repo  |  40823206 site  |  40823207 repo  |  40823207 site  |  40823223 repo  |  40823223 site  |  40823224 repo |  40823224 site ---------- stage3-bg3 repo  |  stage3-bg3 site  |  40823236 repo  |  40823236 site  |  40823202 repo  |  40823202 site  |  40823203 repo  |  40823203 site  |  40823212 repo  |  40823212 site  |  40823219 repo  |  40823219 site  |  40823222 repo  |  40823222 site  |  40823231-2 repo  |  40823231-2 site  |  40823244 repo |  40823244 site ---------- stage3-bg4 repo  |  stage3-bg4 site  |  40823239 repo  |  40823239 site  |  s40723140 repo  |  s40723140 site  |  s40723128 repo  |  s40723128 site  |  s40723139 repo  |  s40723139 site  |  s40723106 repo  |  s40723106 site  |  s40723135 repo  |  s40723135 site  |  s40723143 repo  |  s40723143 site  |  s40723215 repo |  s40723215 site ---------- stage3-bg5 repo  |  stage3-bg5 site  |  40823221 repo  |  40823221 site  |  40823204 repo  |  40823204 site  |  40823205 repo  |  40823205 site  |  40823220 repo  |  40823220 site  |  40823228 repo  |  40823228 site  |  40823237 repo  |  40823237 site  |  40823242 repo  |  40823242 site  |  40823250 repo |  40823250 site  |  40832244 repo |  40832244 site ---------- stage3-bg6 repo  |  stage3-bg6 site  |  40823225 repo  |  40823225 site  |  40823214 repo  |  40823214 site  |  40823218 repo  |  40823218 site  |  40823211 repo  |  40823211 site  |  40823248 repo  |  40823248 site  |  40823247 repo  |  40823247 site  |  40823216 repo  |  40823216 site  |  40823238 repo |  40823238 site ---------- stage3-bg7 repo  |  stage3-bg7 site  |  40623144 repo  |  40623144 site  |  40823233 repo  |  40823233 site  |  s40723224 repo  |  s40723224 site  |  40823241 repo  |  40823241 site  |  40423155 repo  |  40423155 site  |  40823227 repo  |  40823227 site  |  s40723233 repo  |  s40723233 site ---------- \n', 'tags': '', 'url': 'w10.html'}, {'title': 'W11', 'text': '\n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '\n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '\n 進行task2 remote API \n \n 程式碼: \n \n \n \n \n \n \n \n import   sim as vrep \n import   math \n import   random \n import   time \n import   keyboard \n \xa0\xa0 \xa0 \n print   ( \'Start\' ) \n \xa0\xa0 \xa0 \n # Close eventual old connections \n vrep.simxFinish( - 1 ) \n # Connect to V-REP remote server \n clientID  =   vrep.simxStart( \'192.168.43.111\' ,  19997 ,  True ,  True ,  5000 ,  5 ) \n \xa0\xa0\xa0 \xa0 \n if   clientID ! = - 1 : \n \xa0\xa0\xa0\xa0 print   ( \'Connected to remote API server\' ) \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 res  =   vrep.simxAddStatusbarMessage( \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 clientID,  "40823202" , \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simx_opmode_oneshot) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 if   res  not   in   (vrep.simx_return_ok, vrep.simx_return_novalue_flag): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "Could not add a message to the status bar." ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 opmode  =   vrep.simx_opmode_oneshot_wait \n \xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 vrep.simxStartSimulation(clientID, opmode) \n \xa0\xa0\xa0\xa0 ret,shaft1 = vrep.simxGetObjectHandle(clientID, "shaft1" ,opmode) \n \xa0\xa0\xa0\xa0 ret,shaft2 = vrep.simxGetObjectHandle(clientID, "shaft2" ,opmode) \n \xa0\xa0\xa0\xa0 ret,shaft3 = vrep.simxGetObjectHandle(clientID, "shaft3" ,opmode) \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 while   True : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "w" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft1, 2 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "w" ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "s" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft1, 0 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "s" ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "a" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft2, 2 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "a" ) \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "b" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft2, 0 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "b" ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "c" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft3, 0.1 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "c" ) \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   keyboard.is_pressed( "z" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 vrep.simxSetJointTargetVelocity(clientID,shaft3, 0 ,opmode) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( "z" )\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0  \n else : \n \xa0\xa0\xa0\xa0 print   ( \'Failed connecting to\xa0 remote API server\' ) \n \xa0\xa0\xa0\xa0 print   ( \'End\' ) \n \n \n \n \n \n 模擬檔: https://drive.google.com/drive/u/0/my-drive \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '\n 進行robodk測試 \n \n 分解步驟: \n 1.先開啟ipv4，之後開啟robodk，之後開啟robodk.exe(F:\\robodk522_portable\\bin) \n 2.在robodk開啟我們要的範例pick_and_place_with_python.rdk(F:\\robodk522_portable\\examples\\ pick_and_place) \n \n 3.將pick_and_place.py(F:\\robodk522_portable\\examples\\ pick_and_place )放到編輯器裡，將改成式的第78行(先開view的line numbers) \n \n 4.將RDK = Robolink(robodk_path="改成你資料夾內到 RoboDK.exe的位址 " \n \n 5.在roboDK裡選工具>選項>其他>點選api服務器ip，將此行ip複製到^-^ \n RDK = Robolink(robodk_path=" 改成你資料夾內到 RoboDK.exe的位址 ", robodk_ip=\' ^-^ \')，之後按go \n \n 6.再來換改 roboDK裡選工具>選項>python， 將你電腦白窗裡跑出的用灰色框起來的那串藍色的字，放到python編輯器裡，將python解釋器改成python.exe \n \n 7.去白窗執行go，即可成功(如有看不懂的步驟，請查閱上面影片) \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': "\n \n 1程式: \n function sysCall_init()\n    -- do some initialization here\n    joint=sim.getObjectHandle('joint')\nend\nfunction sysCall_actuation()\n    -- put your actuation code here\n    sim.setJointTargetPosition(joint,30*math.pi/180)\nend\n \n \n 2程式: \n function sysCall_init()\n    -- do some initialization here\n    joint=sim.getObjectHandle('joint')\n    set=0\n    degset=10\nend\n  \nfunction sysCall_actuation()\n    -- put your actuation code here\n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==97) then\n            set1=set+degset\n            sim.setJointTargetPosition(joint,set1*math.pi/180)\n            end\n            if (auxiliaryData[1]==100) then\n            set2=set-degset\n            sim.setJointTargetPosition(joint,set2*math.pi/180)\n            end\n            if (auxiliaryData[1]==119) then\n                degset=degset+10\n                print(degset)\n            end\n            if (auxiliaryData[1]==115) then\n                degset=degset-10\n                if(degset<1) then\n                    degset=1\n                end\n                print(degset)\n            end\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend \n \n", 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '\n Onshape \n \n *在底座的設計上需要高一點，因為還要裝置方體使他作動 \n 圖片下載: 點我!點我! \n \n -------------------------------------------------------------------------------------------------------- \n coppeliasim場景布置 \n \n -------------------------------------------------------------------------------------------------- \n 程式迴圈 \n \n 更改程式後的版本: \n \n 檔案下載: w16迴圈程式.ttt \n function moving(x,y)\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area*2/c\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 then\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    sim.setJointTargetPosition(joint01,deg1)\n    sim.setJointTargetPosition(joint02,-deg2)\n    sim.setJointTargetPosition(joint03,deg3)\nend\n\nfunction sysCall_threadmain()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.08)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(3)\n    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do\n    moving(0.2,0.7)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.08)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(3)\n    moving(-0.3,-0.55)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",0)\n    sim.wait(3)\n    sim.setIntegerSignal("pad_switch",1)\n    sim.setJointTargetPosition(jointz,-0.08)\n    sim.wait(3)\n    sim.setJointTargetPosition(jointz,0)\n    sim.wait(3)\n    end\nend \n -------------------------------------------------------------------------------------------------- 鍵盤程式控制 \n \n 鍵盤對應鍵:軸的運動 \n s:軸1左轉、w:軸1右轉 a:軸2左轉、d:軸2右轉 o:吸盤向下、l:吸盤向上並吸取、b:放下 \n 檔案下載: w16鍵盤控制程式.ttt \n function sysCall_init()\n    joint01=sim.getObjectHandle(\'joint1\')\n    joint02=sim.getObjectHandle(\'joint2\')\n    joint03=sim.getObjectHandle(\'joint3\')\n    jointz=sim.getObjectHandle(\'jointz\')\n    sim.setJointTargetPosition(joint01,0)\n    sim.setJointTargetPosition(joint02,0)\n    sim.setJointTargetPosition(joint03,0)\n    sim.setJointTargetPosition(jointz,0)\n    deg1=0\n    deg2=0\nend\n\nfunction sysCall_actuation()\n     message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==119) then\n            deg1=deg1+1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==115) then\n            deg1=deg1-1\n            sim.setJointTargetPosition(joint01,deg1*math.pi/180)\n            end\n            if (auxiliaryData[1]==97) then\n            deg2=deg2+1\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==100) then\n            deg2=deg2-1\n            sim.setJointTargetPosition(joint02,deg2*math.pi/180)\n            end\n            if (auxiliaryData[1]==111) then\n                sim.setJointTargetPosition(jointz,-0.55)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if (auxiliaryData[1]==108) then\n                sim.setJointTargetPosition(jointz,0)\n                sim.setIntegerSignal("pad_switch",1)\n            end\n            if (auxiliaryData[1]==98) then\n                sim.setIntegerSignal("pad_switch",0)\n            end\n            sim.setJointTargetPosition(joint03,(deg2-deg1)*math.pi/180)\n        end\n    message,auxiliaryData=sim.getSimulatorMessage()\n    end\nend\n\n \n ----------------------------------------------------------------------------------------------------- \n python remote API \n \n import sim as vrep\nimport math\nimport random\nimport time\nimport math\n\ndef moving (x,y):\n    a=0.4\n    b=0.4\n    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)\n    s=(a+b+c)/2\n    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)\n    h=area*2/c\n    deg1_base=math.atan(x/y)\n    if x<0 and y<0 :\n        deg1_base=deg1_base+math.pi\n    end\n    deg1_tri=math.asin(h/a)\n    deg1=deg1_base+deg1_tri\n    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)\n    deg3=deg2-deg1\n    vrep.simxSetJointTargetPosition(clientID,deg1,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,-deg2,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,deg3,0,opmode)\n    \nprint (\'Start\')\n \nvrep.simxFinish(-1)\n  \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\n\nif clientID != -1:\n    print (\'Connected to remote API server\')\n\n    res = vrep.simxAddStatusbarMessage(\n        clientID, "40823202 ",\n        vrep.simx_opmode_oneshot)\n    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):\n        print("Could not add a message to the status bar.")\n\n\n    opmode = vrep.simx_opmode_oneshot_wait\n    STREAMING = vrep.simx_opmode_streaming\n\n\n    vrep.simxStartSimulation(clientID, opmode)\n    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)\n    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)\n    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)\n    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)\n    \n    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)\n    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.08,opmode)\n    time.sleep(1)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    time.sleep(1)\n    moving:(0.2,0.7)\n    time.sleep(1)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n    time.sleep(1)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.08,opmode)\n    time.sleep(1)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)\n    moving:(-0.3,-0.55)\n    time.sleep(1)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)\n    time.sleep(1)\n    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)\n    vrep.simxSetJointTargetPosition(clientID,jointz,-0.08,opmode)\n    time.sleep(1)\n    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode) \n \n', 'tags': '', 'url': 'W16.html'}, {'title': 'w17', 'text': '模擬期末報告影片 \n', 'tags': '', 'url': 'w17.html'}, {'title': 'W5', 'text': '\n \n', 'tags': '', 'url': 'W5.html'}, {'title': '問題', 'text': '', 'tags': '', 'url': '問題.html'}, {'title': '救回commit', 'text': '不小心把commit的紀錄刪掉 \n \n 搜尋問題 \n git reset -- hard {commit id} 之後再推送 \n \n \n 再git pull \n \n', 'tags': '', 'url': '救回commit.html'}, {'title': '沒辦法開python', 'text': '\n 解決辦法: \n \n 將這兩個檔案放到cmsimde，再開啟一次即可成功 \n', 'tags': '', 'url': '沒辦法開python.html'}, {'title': 'PUSH 不了', 'text': '出現問題: \n \n 後來發現因為建了太多的branch，導致程式不知道我要在哪推送 \n \n git branch 名稱\xa0 \xa0 \xa0 (創建分支) \n git branch -d 名稱\xa0 \xa0(刪除分支) \n git check (確認版本) \n', 'tags': '', 'url': 'PUSH 不了.html'}, {'title': '筆記', 'text': '', 'tags': '', 'url': '筆記.html'}, {'title': '協同推送', 'text': '\n', 'tags': '', 'url': '協同推送.html'}, {'title': 'CoppeliaSim基本操作', 'text': '', 'tags': '', 'url': 'CoppeliaSim基本操作.html'}]};